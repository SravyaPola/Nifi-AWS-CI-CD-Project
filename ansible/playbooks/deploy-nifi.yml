---
- name: Full NiFi Deployment
  hosts: ec2
  remote_user: ubuntu
  become: yes

  vars:
    nifi_version: "1.26.0"
    nifi_home: "/opt/nifi-{{ nifi_version }}"
    nifi_zip: "nifi-{{ nifi_version }}-bin.zip"
    remote_zip: "/home/ubuntu/{{ nifi_zip }}"
    # these two must be passed from Jenkins via --extra-vars
    s3_bucket: "{{ s3_bucket_name }}"
    aws_region: "{{ aws_region }}"

  tasks:
    - name: Ensure unzip, awscli & boto3 are installed
      apt:
        update_cache: yes
        name:
          - unzip
          - awscli
          - python3-boto3
        state: present

    - name: Download NiFi ZIP from S3 (if missing)
      shell: >
        aws s3 cp
          s3://{{ s3_bucket }}/{{ nifi_zip }}
          {{ remote_zip }}
          --region {{ aws_region }}
      args:
        creates: "{{ remote_zip }}"

    - name: Unarchive NiFi
      unarchive:
        src: "{{ remote_zip }}"
        dest: /opt
        remote_src: yes
        owner: ubuntu
        group: ubuntu
        creates: "{{ nifi_home }}/bin/nifi.sh"

    - name: Delete NiFi ZIP after extraction
      file:
        path: "{{ remote_zip }}"
        state: absent

    - name: Fix permissions on NiFi directory
      file:
        path: "{{ nifi_home }}"
        owner: ubuntu
        group: ubuntu
        recurse: yes

    - name: Configure java.home in bootstrap.conf
      lineinfile:
        path: "{{ nifi_home }}/conf/bootstrap.conf"
        regexp: '^java\.home='
        line: "java.home={{ java_home }}"
        backrefs: yes

    - name: Configure NiFi HTTP in nifi.properties
      block:
        - name: Set HTTP host to 0.0.0.0
          lineinfile:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^#?nifi\.web\.http\.host='
            line: 'nifi.web.http.host=0.0.0.0'
            create: yes

        - name: Set HTTP port to 8080
          lineinfile:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^#?nifi\.web\.http\.port='
            line: 'nifi.web.http.port=8080'
            create: yes

        - name: Disable HTTPS & security props
          replace:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^(nifi\.web\.https\..*|nifi\.security\..*)'
            replace: '# \\0'

        - name: Enable Site-to-Site over HTTP
          lineinfile:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^#?nifi\.remote\.input\.http\.enabled='
            line: 'nifi.remote.input.http.enabled=true'
            create: yes

        - name: Set Site-to-Site TTL & cache
          lineinfile:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^#?nifi\.remote\.input\.http\.transaction\.ttl='
            line: 'nifi.remote.input.http.transaction.ttl=30 sec'
            create: yes

        - name: Set content cache expiration
          lineinfile:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^#?nifi\.remote\.contents\.cache\.expiration='
            line: 'nifi.remote.contents.cache.expiration=30 secs'
            create: yes

    - name: Allow NiFi UI through UFW
      ufw:
        rule: allow
        port: 8080
        proto: tcp

    - name: Start or restart NiFi
      become_user: ubuntu
      shell: |
        {{ nifi_home }}/bin/nifi.sh stop || true
        {{ nifi_home }}/bin/nifi.sh start
      args:
        executable: /bin/bash

    - name: Wait for NiFi HTTP port to be reachable from Jenkins
      wait_for:
        host: "{{ hostvars[inventory_hostname]['ansible_host'] }}"
        port: 8080
        delay: 10
        timeout: 300
        state: started
      delegate_to: localhost

    - name: Print NiFi UI URL
      debug:
        msg: "NiFi is now up at http://{{ hostvars[inventory_hostname]['ansible_host'] }}:8080/nifi"
