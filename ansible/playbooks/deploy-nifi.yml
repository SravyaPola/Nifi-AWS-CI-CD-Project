---
- name: Full NiFi Deployment
  hosts: nifi
  become: yes

  vars:
    nifi_home: /opt/nifi-1.26.0
    nifi_zip: nifi-1.26.0-bin.zip
    remote_zip_path: /home/ubuntu/nifi-1.26.0-bin.zip

  tasks:
    - name: Ensure unzip and pip3/boto3 are installed
      apt:
        name:
          - unzip
          - python3-pip
        state: present
        update_cache: yes

    - name: Ensure boto3 is installed (for aws_s3 module)
      pip:
        name: boto3

    - name: Download NiFi artifact from S3
      aws_s3:
        bucket: "{{ s3_bucket }}"
        object: "{{ nifi_zip }}"
        dest: "{{ remote_zip_path }}"
        mode: get
        region: "{{ region }}"

    - name: Unarchive NiFi
      unarchive:
        src: "{{ remote_zip_path }}"
        dest: /opt
        remote_src: yes

    - name: Remove NiFi zip after extraction
      file:
        path: "{{ remote_zip_path }}"
        state: absent

    - name: Set permissions on NiFi home
      file:
        path: "{{ nifi_home }}"
        owner: ubuntu
        group: ubuntu
        recurse: yes

    - name: Configure nifi.properties for HTTP and Site-to-Site
      block:
        - name: Set nifi.web.http.host
          lineinfile:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^nifi\.web\.http\.host='
            line: 'nifi.web.http.host=0.0.0.0'
            create: yes

        - name: Set nifi.web.http.port
          lineinfile:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^nifi\.web\.http\.port='
            line: 'nifi.web.http.port=8080'
            create: yes

        - name: Set nifi.web.http.network.interface.default
          lineinfile:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^nifi\.web\.http\.network\.interface\.default='
            line: 'nifi.web.http.network.interface.default='
            create: yes

        - name: Comment out HTTPS and security props
          replace:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^(nifi\.web\.https\.host=.*|nifi\.web\.https\.port=.*|nifi\.security\..*)'
            replace: '#\1'

        - name: Set nifi.remote.input.host empty
          lineinfile:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^nifi\.remote\.input\.host='
            line: 'nifi.remote.input.host='
            create: yes

        - name: Set nifi.remote.input.secure to false
          lineinfile:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^nifi\.remote\.input\.secure='
            line: 'nifi.remote.input.secure=false'
            create: yes

        - name: Set nifi.remote.input.socket.port empty
          lineinfile:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^nifi\.remote\.input\.socket\.port='
            line: 'nifi.remote.input.socket.port='
            create: yes

        - name: Set nifi.remote.input.http.enabled true
          lineinfile:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^nifi\.remote\.input\.http\.enabled='
            line: 'nifi.remote.input.http.enabled=true'
            create: yes

        - name: Set nifi.remote.input.http.transaction.ttl
          lineinfile:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^nifi\.remote\.input\.http\.transaction\.ttl='
            line: 'nifi.remote.input.http.transaction.ttl=30 sec'
            create: yes

        - name: Set nifi.remote.contents.cache.expiration
          lineinfile:
            path: "{{ nifi_home }}/conf/nifi.properties"
            regexp: '^nifi\.remote\.contents\.cache\.expiration='
            line: 'nifi.remote.contents.cache.expiration=30 secs'
            create: yes

    - name: Start NiFi
      become_user: ubuntu
      shell: |
        {{ nifi_home }}/bin/nifi.sh stop || true
        {{ nifi_home }}/bin/nifi.sh start
      args:
        executable: /bin/bash
