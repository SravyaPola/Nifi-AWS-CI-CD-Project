---
- name: Deploy and start NiFi
  hosts: ec2
  become: yes

  tasks:
    - name: Ensure unzip is installed
      apt:
        name: unzip
        state: present

    - name: Unarchive NiFi to /opt
      unarchive:
        src: /home/ubuntu/nifi-1.26.0-bin.zip
        dest: /opt
        remote_src: yes
        owner: ubuntu
        group: ubuntu

    - name: Set ownership on NiFi directory
      file:
        path: /opt/nifi-1.26.0
        state: directory
        owner: ubuntu
        group: ubuntu
        recurse: yes

    - name: Find JAVA_HOME path on target host
      shell: |
        readlink -f $(which java) | sed "s:bin/java::"
      register: java_home_path_cmd
      changed_when: false

    - name: Configure JAVA_HOME in NiFi bootstrap.conf
      lineinfile:
        path: /opt/nifi-1.26.0/conf/bootstrap.conf
        regexp: '^java.home='
        line: "java.home={{ java_home_path_cmd.stdout }}"
        create: yes

    - name: Update nifi.web.http.host to listen on all interfaces
      replace:
        path: /opt/nifi-1.26.0/conf/nifi.properties
        regexp: '^nifi.web.http.host=.*'
        replace: 'nifi.web.http.host='

    - name: Comment out nifi.web.https.host
      replace:
        path: /opt/nifi-1.26.0/conf/nifi.properties
        regexp: '^(nifi.web.https.host=.*)'
        replace: '# \1'

    - name: Comment out nifi.web.https.port
      replace:
        path: /opt/nifi-1.26.0/conf/nifi.properties
        regexp: '^(nifi.web.https.port=.*)'
        replace: '# \1'

    - name: Set nifi.remote.input.secure to false
      replace:
        path: /opt/nifi-1.26.0/conf/nifi.properties
        regexp: '^nifi.remote.input.secure=.*'
        replace: 'nifi.remote.input.secure=false'

    - name: Clear specified NiFi security properties
      lineinfile:
        path: /opt/nifi-1.26.0/conf/nifi.properties
        regexp: '^nifi.security.{{ item }}=.*'
        line: "nifi.security.{{ item }}="
        backrefs: yes
      loop:
        - keystore
        - truststore
        - keystoreType
        - keystorePasswd
        - keyPasswd
        - truststoreType
        - truststorePasswd

    - name: Start NiFi
      command: /opt/nifi-1.26.0/bin/nifi.sh start
      environment:
        JAVA_HOME: "{{ java_home_path_cmd.stdout }}"

    - name: Check NiFi status
      command: /opt/nifi-1.26.0/bin/nifi.sh status
      register: nifi_status

    - name: Print NiFi status
      debug:
        var: nifi_status.stdout
